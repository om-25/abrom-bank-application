pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'master', url: 'https://github.com/om-25/abrom-bank-application.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
          
        // build the project and create a JAR file
        sh 'cd INSURANCE-mANAGEMENT/  && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http:3.108.215.158:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd INSURANCE-mANAGEMENT/ && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
     environment {
     DOCKER_IMAGE = "om25/Insurance-Management:${BUILD_NUMBER}"
         DOCKERFILE_LOCATION = "INSURANCE-mANAGEMENT/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd INSURANCE-mANAGEMENT/ && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
          }
        }
      }
   }     
 }
}
